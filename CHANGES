
                           LIBINT REVISION HISTORY

Following is a brief summary of changes made in each release of Libint.

- 2018-xx-yy: 2.5.0-beta.3
  - validation target in exported library works correctly in absence of C++11 API
  - cleanup of molden exporter
  - Boost.Container's small_vector is only usable if the Boost version >= 1.61

- 2018-08-13: 2.5.0-beta.2
  - fixed molden exporter
  - 2-body core engine singleton re-initialization is thread-safe
  - improved precision of Chebyshev Boys engine and made it the default for 1-e Coulomb ints
  - fixed precision handling in reference Boys engine to support arbitrary precision
  - resolved issue #105: libint2.h is again usable from C, added unit test
  - shell uses Boost.Container's small_vector is available

- 2018-07-11: 2.5.0-beta.1
  - resolved issue 90
  - resolved issue 91: fixed formatting errors in def2-sv(p)-c, def2-tzvp-c, and def2-tzvpp-c basis set definitions
  - resolved issue 95
  - minor fixes for C++17 (includes PR 96 HT https://github.com/mfherbst)
  - [generated lib only] ensure system boost/preprocessor.hpp is 1.57 or more recent;
    reverts to bundled boost is system boost is too old
  - resolved issue 97: checks variadic macro support in boost.preprocessor for the libint compiler
  - C++ API produces correct 2- and 3-center 2-e derivatives
  - added minimal non-HF validation tests for C++ API (only 2-body Coulomb)
  - removed the following deprecated features:
    - libint2::init
    - libint2::cleanup
  - deprecated the following features:
    - Engine::set_oper (use Engine::set)
    - Engine::set_braket (use Engine::set)
  - minor C++ API improvements

- 2017-11-21: 2.4.2
  - fixed vector.h for use on non-x86 platforms

- 2017-11-06: 2.4.1
  - plugged leaky Engine::set_{param,oper,braket}
  - fixed uninitialized value use by libint2::molden::Export
  - eri test will only validate integrals over Cartesian Gaussians if Obara-Saika-Ahlrichs are used

- 2017-10-25: 2.4.0
  - changed default to use user-provided boost over bundled boost + minor fixes

- 2017-10-11: 2.4.0-beta.4
  - added support for precomputed pair data use in 2-body C++ API
  - fixed the derivative VRRs for the electrostatic potential ints that were used since 2.4.0-beta.3
  - fixed Cygwin compilation issues (#85)
  - fixed generic derivative code (#86)

- 2017-08-03: 2.4.0-beta.3
  - added support for spherical multipole integrals
  - electrostatic potential ints use HRR
  - configure scripts use AS_HELP_STRING

- 2017-05-18: 2.4.0-beta.2
  - cgshell_ordering.h is no longer preprocessed by configure, and has shgshell_ordering.h counterpart
  - added molden exporter
  
- 2017-05-18: 2.4.0-beta.1
  - added support for configurable solid harmonic order (standard and GaussianXX only)
  - real_t -> scalar_type and realvec_t -> value_type

- 2017-05-02: 2.3.0
  - bumped the compiler source license to GPLv3, generated code is LGPLv3.
  - replaced non-standard-conforming libint2::any with a homegrown C++17-conforming any;
    std::any is used if available.
  
- 2017-03-29: 2.3.0-beta.6
  - minor bug fixes introduced in beta.5

- 2017-03-28: 2.3.0-beta.5
  - now use bundled boost preprocessor only
  - added erf- and erfc-attenuated Coulomb 1-body ints
  - improved const-correctness of C++11 API

- 2017-03-06: 2.3.0-beta.4
  - fixed include path handling of in-place vs. installed generated headers (HT https://github.com/mfherbst)
  - fixed 2-norm Schwarz computation in hf++

- 2017-01-12: 2.3.0-beta.3
  - boys.h requires C++11; Chebyshev7 is the default Boys engine, Chebyshev3 is gone.

- 2016-12-15: 2.3.0-beta.2
  - fixed a bug in r12 core integrals code
  - added erf- and erfc-attenuated Coulomb integrals
  - sanitize Eigen includes

- 2016-11-23: 2.3.0-beta.1
  - read_dotxyz accepts bohr-to-angstrom conversion factor, the default is (still) 2010 CODATA


